<?php/* * Plugin Name: Categorize your Wishlist for Woocomerce,Posts & Custom Post Types  * Plugin URI: https://wordpress.org/plugins/categorize-wishlist-woocomerce-posts-custom-post-types/ * Author: Excellent Webworld * Description: Excellent Web World is an IT company focus on Web Development and Application Development. * Version: 1.0 * * Author URI: https://excellentwebworld.com/ * License: GPL v3 */if ( ! defined( 'ABSPATH' ) ) {  exit;}define('CWWPCPT_PATH', plugin_dir_url(__FILE__));function CWWPCPT_posts_load_translation() {    load_plugin_textdomain("cwwpcpt-posts",false,dirname(plugin_basename(__FILE__)).'/lang');}add_action( 'plugins_loaded', 'CWWPCPT_posts_load_translation' );function CWWPCPT_install() {    global $wpdb, $cwwpcpt_db_version;    $cwwpcpt_sql = array();    //Favourite Category Table    $cwwpcpt_category_table = $wpdb->prefix . "favourite_categories";    if( $wpdb->get_var("show tables like '". $cwwpcpt_category_table . "'") !== $cwwpcpt_category_table )     {         $cwwpcpt_sql[] = "CREATE TABLE ". $cwwpcpt_category_table . "     (        id int(11) NOT NULL AUTO_INCREMENT,        wishlist_name varchar(255) NOT NULL,        user_id varchar(255) NOT NULL,        PRIMARY KEY  (id)        ) ";    }    //Favourite Posts table    $cwwpcpt_post_table = $wpdb->prefix . "favourite_posts";    if( $wpdb->get_var("show tables like '". $cwwpcpt_post_table . "'") !== $cwwpcpt_post_table )     {         $cwwpcpt_sql[] = "CREATE TABLE ". $cwwpcpt_post_table . "   (        id int(11) NOT NULL AUTO_INCREMENT,        wishlist_id varchar(255) NOT NULL,        wishlist_name varchar(255) NOT NULL,        post_id varchar(255) NOT NULL,        user_id varchar(255) NOT NULL,        PRIMARY KEY  (id)        )";    }    if ( !empty($cwwpcpt_sql) )     {        require_once(ABSPATH . 'wp-admin/includes/upgrade.php');        dbDelta($cwwpcpt_sql);        add_option("cwwpcpt_db_version", $cwwpcpt_db_version);    }}register_activation_hook( __FILE__, 'CWWPCPT_install' );function CWWPCPT_content_filter($cwwpcpt_content) {    if (is_single())     {      $current_id = get_the_ID();      if(is_user_logged_in())      {         global $wpdb;         $user = wp_get_current_user();         $user_id = $user->ID;          $table_name = $wpdb->prefix . "favourite_categories";         $is_in_database = $wpdb->get_results( "SELECT * FROM $table_name WHERE user_id = '$user_id'" );         echo CWWPCPT_favourite_btn_link($cwwpcpt_content); ?>        <div id="myModal" class="modal">          <div class="modal-content">            <span class="close">&times;</span>            <?php if(!empty($is_in_database)){?>              <div id="select_post" style="display: block;">              <form name="CWWPCPT_categories" method="post" action="<?php echo $_SERVER['REQUEST_URI']; ?>">              <?php wp_nonce_field('cwwpcpt_wishlist_posts_action'); ?>                <input id="CWWPCPT_btn" type="button" name="CWWPCPT_btn" value="Add New Category" onclick="show_add_new_cat_form();" />                <div class="CWWPCPT_select_cat">                  <label>Select Category for Favourite Post :</label>                  <input type="hidden" name="post_id" value="<?php echo $current_id; ?>" id="post_id">                  <input type="hidden" name="user_id" value="<?php echo $user_id; ?>" id="user_id">                  <select id="CWWPCPT_category_select" name="CWWPCPT_category_name" required="required" onchange="setTextField(this)">                    <option value="">----- Select Category -----</option>                    <?php foreach ($is_in_database as $wishlist_single) { ?>                    <option value="<?php echo $wishlist_single->id; ?>"><?php echo $wishlist_single->wishlist_name; ?></option>                    <?php }?>                  </select>                  <input id="option_text" type = "hidden" name = "option_text" value = "" />                </div>                  <input type="submit" name="wishlist_posts" value="Add Favourites">                <div class="CWWPCPT_clear"></div>              </form>              </div>                            <div id="add_new_category" style="display: none;">              <form id="list-form" class="list-form" method="post" action="<?php echo $_SERVER['REQUEST_URI']; ?>" name="add_wishlist">              <?php wp_nonce_field('cwwpcpt_new_wishaction'); ?>               <label>Add Favourite Category : </label>                  <input type="text" name="new_wishlist_name" id="new_wishlist_name" placeholder="Enter Wishlist Name" required="required">                  <input type="hidden" name="wishuser_id" value="<?php echo $user_id; ?>" id="wishuser_id">                  <input type="submit" name="new_wish" value="Add Category" class="Wishlist_add">               </form>               </div>              <?php }              else              { ?>                <form id="list-form" class="list-form" method="post" action="<?php echo $_SERVER['REQUEST_URI']; ?>" name="add_wishlist">                <?php wp_nonce_field('cwwpcpt_new_wishaction'); ?>                   <label>Add Favourite Category : </label>                            <input type="text" name="new_wishlist_name" id="new_wishlist_name" placeholder="Enter Wishlist Name" required="required">                            <input type="hidden" name="wishuser_id" value="<?php echo $user_id; ?>" id="wishuser_id">                            <input type="submit" name="new_wish" value="Add Category" class="Wishlist_add">                   </form>            <?php }?>          </div>        </div>    <?php       }    }    if (is_page()){        if (strpos($cwwpcpt_content,'[cwwpcpt-favourite-posts-list]')!== false) {            $cwwpcpt_content = str_replace('cwwpcpt-favourite-posts-list', CWWPCPT_list_favourite_posts(), $cwwpcpt_content);        }        else        {          return $cwwpcpt_content;        }    }    if( $_SERVER['REQUEST_METHOD'] == 'POST' )    {       if(isset($_POST["wishlist_posts"]))       {          $cwwpcpt_nonce = $_REQUEST['_wpnonce'];          if (!wp_verify_nonce($cwwpcpt_nonce, 'cwwpcpt_wishlist_posts_action' ) ) die( 'Failed security check' );        if ( function_exists('current_user_can') && !current_user_can('manage_options') )          die(__('Cheatin&#8217; uh?'));          global $wpdb;          $table_name = $wpdb->prefix."favourite_posts";          $delete_query = "select * from $table_name where post_id = '".$_POST['post_id']."' and user_id = '".$_POST['user_id']."'";          $results = $wpdb->query($delete_query);                    if($results == 0)          {             if($_POST['wishlist_posts'] == "Add Favourites")             {                   $wpdb->insert(                     $table_name,                     array(                         'wishlist_id'     => sanitize_text_field($_POST['CWWPCPT_category_name']),                        'wishlist_name'    => sanitize_text_field($_POST['option_text']),                        'post_id' => sanitize_text_field($_POST['post_id']),                        'user_id'   => sanitize_text_field($_POST['user_id'])                    ));             }           }          else          {            echo "<script>alert('Already In Your Wishlist');</script>";          }       }       if(isset($_POST["new_wish"]))       {          $cwwpcpt_nonce = $_REQUEST['_wpnonce'];          if (!wp_verify_nonce($cwwpcpt_nonce, 'cwwpcpt_new_wishaction' ) ) die( 'Failed security check' );        if ( function_exists('current_user_can') && !current_user_can('manage_options') )          die(__('Cheatin&#8217; uh?'));          echo "<script>alert('New Wishlist Added');</script>";               global $wpdb;          $tables_name = $wpdb->prefix."favourite_categories";          $exists_wishlist_query = "select * from $tables_name where wishlist_name = '".$_POST['new_wishlist_name']."' and user_id = '".$_POST['wishuser_id']."'";          $if_exists = $wpdb->query($exists_wishlist_query);          if($if_exists == 0)          {             if($_POST['new_wish'] == "Add Category")             {                $wpdb->insert(                     $tables_name,                     array(                         'wishlist_name'     => sanitize_text_field($_POST['new_wishlist_name']),                        'user_id'    => sanitize_text_field($_POST['wishuser_id'])                    )                   );                             }          }          else          {             echo "<script>alert('Wishlist Name Already Exists');</script>";          }          $url = "http://".$_SERVER["HTTP_HOST"].$_SERVER["REQUEST_URI"];          echo "<script>window.location.href='".$url."'</script>";       }    }    //return $cwwpcpt_content;}add_filter('the_content','CWWPCPT_content_filter');function CWWPCPT_favourite_btn_link($post_content){     $cwwpcpt_options = get_option('cwwpcpt_options');    $cwwpcpt_multiposts = get_option('cwwpcpt_multi_posts_options');    if(empty($cwwpcpt_multiposts ) || $cwwpcpt_multiposts == '')    {      $cwwpcpt_multiposts = array();      $cwwpcpt_multiposts[] = "post";    }    else    {      $len = count($cwwpcpt_multiposts);      $cwwpcpt_multiposts[$len] = "post";    }    $cwwpcpt_post_type_name = get_post_type( get_the_ID() );    if(in_array($cwwpcpt_post_type_name, $cwwpcpt_multiposts))    {          if ($cwwpcpt_options['cwwpcpt_autoshow'] == 'before')       {          $post_content = '<button id="myBtn" style="background-color:'.$cwwpcpt_options['cwwpcpt_favourite_btn'].';border-color: '.$cwwpcpt_options['cwwpcpt_favourite_btn_border'].';padding: '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_top'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_right'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_bottom'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_left'].'px;margin: '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_top'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_right'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_bottom'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_left'].'px;color: '.$cwwpcpt_options['cwwpcpt_favourite_btn_text_color'].';">'.$cwwpcpt_options['cwwpcpt_favourite_btn_text'].'</button>' . $post_content;      }       else if ($cwwpcpt_options['cwwpcpt_autoshow'] == 'after')       {          $post_content = $post_content . '<button id="myBtn" style="background-color:'.$cwwpcpt_options['cwwpcpt_favourite_btn'].';border-color: '.$cwwpcpt_options['cwwpcpt_favourite_btn_border'].';padding: '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_top'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_right'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_bottom'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_padding_left'].'px;margin: '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_top'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_right'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_bottom'].'px '.$cwwpcpt_options['cwwpcpt_favourite_btn_margin_left'].'px;color: '.$cwwpcpt_options['cwwpcpt_favourite_btn_text_color'].';">'.$cwwpcpt_options['cwwpcpt_favourite_btn_text'].'</button>';      }    }    return $post_content;}function CWWPCPT_add_js_script() {    wp_enqueue_script( "cwwpcpt-favourite-posts-categories", CWWPCPT_PATH . "categorize-wishlist-woocomerce-posts-custom-post-types.js", array( 'jquery' ) );    wp_register_style( 'cwwpcpt-favourite-posts-categories-css', CWWPCPT_PATH . "categorize-wishlist-woocomerce-posts-custom-post-types.css");    wp_enqueue_style( 'cwwpcpt-favourite-posts-categories-css' );}add_action('wp_enqueue_scripts', 'CWWPCPT_add_js_script');function CWWPCPT_config() { include('cwwpcpt-admin.php'); }  function CWWPCPT_config_page() {        add_menu_page(__('CWWPCPT Posts Categories'), __('Favourite Posts Categories'), 'manage_options', 'cwwpcpt-favourite-posts-categories', 'CWWPCPT_config','',10);}add_action('admin_menu', 'CWWPCPT_config_page');function CWWPCPT_load_custom_wp_admin_style() {        wp_register_style( 'cwwpcpt_custom_wp_admin_css', plugin_dir_url( __FILE__ ) . 'categorize-wishlist-woocomerce-posts-custom-post-types-style.css', false, '1.0.0' );        wp_enqueue_style( 'cwwpcpt_custom_wp_admin_css' );        wp_enqueue_media();        wp_enqueue_style( 'wp-color-picker' );        wp_enqueue_script( 'wp-color-picker');        wp_enqueue_script( 'cwwpcpt-script-handle', plugins_url('cwwpcpt-script.js', __FILE__ ), array( 'wp-color-picker' ), false, true ); }add_action( 'admin_enqueue_scripts', 'CWWPCPT_load_custom_wp_admin_style' );add_action('admin_footer', function() {?><script>    jQuery(document).ready(function(e) {        jQuery('.tabs .tab-links a').on('click', function(e)  {            var currentAttrValue = jQuery(this).attr('href');            jQuery('.tabs ' + currentAttrValue).show().siblings().hide();            jQuery(this).parent('li').addClass('active').siblings().removeClass('active');            e.preventDefault();        });    });</script><?php });function CWWPCPT_add_shortcode() {    CWWPCPT_list_favourite_posts();}add_shortcode('cwwpcpt-favourite-posts-list', 'CWWPCPT_add_shortcode');function CWWPCPT_list_favourite_posts( $cwwpcpt_args = array() ) {    if(is_user_logged_in())    {      global $wpdb;      $table_name = $wpdb->prefix . "favourite_posts";      $cwwpcpt_user_id = get_current_user_id();      $cwwpcpt_user_info = get_userdata( $cwwpcpt_user_id );      $cwwpcpt_user_name = $cwwpcpt_user_info->data->display_name;      $cwwpcpt_posts_ids = $wpdb->get_results( "SELECT post_id FROM $table_name WHERE user_id = '".$cwwpcpt_user_id."'");    }  if(!is_admin()){    if ( @file_exists(TEMPLATEPATH.'/cwwpcpt-page-template.php') || @file_exists(STYLESHEETPATH.'/cwwpcpt-page-template.php') ):          if(@file_exists(TEMPLATEPATH.'/cwwpcpt-page-template.php')) :              include(TEMPLATEPATH.'/cwwpcpt-page-template.php');          else :              include(STYLESHEETPATH.'/cwwpcpt-page-template.php');          endif;      else:          include("cwwpcpt-page-template.php");      endif;  }}function CWWPCPT_remove_favourite_link($cwwpcpt_post_id) {        $cwwpcpt_options = get_option('cwwpcpt_options');        $cwwpcpt_remove_link = $cwwpcpt_options['cwwpcpt_rem'];        $cwwpcpt_user_id = get_current_user_id();        $class = 'cwwpcpt-link remove-parent';        $cwwpcpt_link = "<a id='rem_$cwwpcpt_post_id' class='$class' href='?cwwpcptaction=cwwpcpt_remove&amp;page=1&amp;cwwpcpt_postid=". $cwwpcpt_post_id ."&amp;cwwpcpt_userid=".$cwwpcpt_user_id."' title='".$remove_link."' rel='nofollow'>";        if($cwwpcpt_options['cwwpcpt_custom_before_image'] != '')        {          $cwwpcpt_link .= "<img src='".$cwwpcpt_options['cwwpcpt_custom_before_image']."' width='20' height='20'>"."</a>";        }        else        {          $cwwpcpt_link .= "<img src='".plugin_dir_url( __FILE__ )."images/hearts.png' width='20' height='20'></a>";        }        $cwwpcpt_link = apply_filters( 'CWWPCPT_remove_favourite_link', $cwwpcpt_link );        echo $cwwpcpt_link;}function CWWPCPT_posts_actions() {    if (isset($_REQUEST['cwwpcptaction'])):        global $cwwpcpt_mode;        global $wpdb;        $cwwpcpt_page_url = $_SERVER['REQUEST_URI'];        $cwwpcpt_page_id = url_to_postid($page_url);        $cwwpcpt_page_url = home_url().$cwwpcpt_page_url;        $table_name = $wpdb->prefix . "favourite_posts";        $cwwpcpt_mode = isset($_REQUEST['cwwpcpt_ajax']) ? $_REQUEST['cwwpcpt_ajax'] : false;        if ($_REQUEST['cwwpcptaction'] == 'cwwpcpt_remove')         {          $cwwpcpt_post_id = sanitize_text_field($_REQUEST['cwwpcpt_postid']);          $cwwpcpt_user_id = sanitize_text_field($_REQUEST['cwwpcpt_userid']);          $wpdb->delete( $table_name, [ 'post_id' => $cwwpcpt_post_id,'user_id' => $cwwpcpt_user_id ], [ '%d','%d' ] );          $cwwpcpt_page_redirect = remove_query_arg( array('cwwpcptaction','cwwpcpt_postid','cwwpcpt_userid'), $cwwpcpt_page_url );        }        else if($_REQUEST['cwwpcptaction'] == 'cwwpcpt_clear')        {            $cwwpcpt_user_id = sanitize_text_field($_REQUEST['cwwpcpt_userid']);            $cwwpcpt_wishlist_id = sanitize_text_field($_REQUEST['cwwpcpt_wishlistid']);            $table_category_name = $wpdb->prefix . "favourite_categories";            $wpdb->delete( $table_name, [ 'user_id' => $cwwpcpt_user_id, 'wishlist_id' => $cwwpcpt_wishlist_id ], [ '%d','%d' ] );            $wpdb->delete( $table_category_name, [ 'user_id' => $cwwpcpt_user_id, 'id' => $cwwpcpt_wishlist_id ], [ '%d','%d' ] );            $cwwpcpt_page_redirect = remove_query_arg( array('cwwpcptaction','cwwpcpt_userid','cwwpcpt_wishlistid'), $cwwpcpt_page_url );        }        wp_redirect($cwwpcpt_page_redirect);        exit();    endif;}add_action('wp_loaded', 'CWWPCPT_posts_actions');function efav_init() {    $cwwpcpt_options = array();    $cwwpcpt_options['cwwpcpt_favourite_btn'] = '#b5a81c';    $cwwpcpt_options['cwwpcpt_favourite_btn_border'] = '#181630';    $cwwpcpt_options['cwwpcpt_favourite_btn_text'] = 'Favourite Post';    $cwwpcpt_options['cwwpcpt_favourite_btn_padding_top'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_padding_right'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_padding_bottom'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_padding_left'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_margin_top'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_margin_right'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_margin_bottom'] = '10';    $cwwpcpt_options['cwwpcpt_favourite_btn_margin_left'] = '10';    $cwwpcpt_options['cwwpcpt_alert_message'] = 'Please Login to Create Wishlist';    $cwwpcpt_options['cwwpcpt_favourite_btn_text_color'] = '#0c383d';    $cwwpcpt_options['cwwpcpt_remove_favourite'] = 'Remove this post';    $cwwpcpt_options['cwwpcpt_clear'] = 'Clear Wishlist';    $cwwpcpt_options['cwwpcpt_favourites_empty'] = 'There is no posts in your wishlist';    $cwwpcpt_options['cwwpcpt_rem'] = 'Removed';    $cwwpcpt_options['cwwpcpt_autoshow'] = 'after';    $cwwpcpt_options['cwwpcpt_post_per_page'] = 10;    $cwwpcpt_options['cwwpcpt_template_view'] = 'list_view';    $cwwpcpt_options['cwwpcpt_custom_before_image'] = '';    $cwwpcpt_options['cwwpcpt_buynow_btn_back_color'] = '#000';    $cwwpcpt_options['cwwpcpt_buynow_btn_text_back_color'] = '#fff';    $cwwpcpt_multi_posts_options = '';    add_option('cwwpcpt_options', $cwwpcpt_options);    add_option('cwwpcpt_multi_posts_options', $cwwpcpt_multi_posts_options);}add_action('activate_categorize-wishlist-woocomerce-posts-custom-post-types/categorize-wishlist-woocomerce-posts-custom-post-types.php', 'efav_init');function CWWPCPT_clear_all_list($cwwpcpt_wishlist_id) {        $cwwpcpt_options = get_option('cwwpcpt_options');        $cwwpcpt_user_id = get_current_user_id();        echo "<div class='cwwpcpt-clear-fav'>";        echo "<a class='cwwpcpt-link' href='?cwwpcptaction=cwwpcpt_clear&amp;page=1&amp;cwwpcpt_userid=". $cwwpcpt_user_id ."&amp;cwwpcpt_wishlistid=".$cwwpcpt_wishlist_id."' rel='nofollow'>". $cwwpcpt_options['cwwpcpt_clear'] . "</a>";        echo "</div>";}function CWWPCPT_list_most_favourited($cwwpcpt_limit=5) {    global $wpdb;    $table_name = $wpdb->prefix . "favourite_posts";    $user = wp_get_current_user();    $user_id = $user->ID;     $cwwpcpt_results = $wpdb->get_results("SELECT *, COUNT(*) AS count FROM $table_name WHERE user_id=$user_id GROUP BY post_id ORDER BY count DESC LIMIT $cwwpcpt_limit;");    if ($cwwpcpt_results) {        echo "<ul>";        foreach ($cwwpcpt_results as $cwwpcpt_result):            $cwwpcpt_id = get_post($cwwpcpt_result->post_id);            echo "<li>";            echo "<a href='".get_permalink($cwwpcpt_result->post_id)."' title='". $cwwpcpt_id->post_title ."'>" . $cwwpcpt_id->post_title . "</a>";            echo "</li>";        endforeach;        echo "</ul>";    }}function CWWPCPT_list_most_favourited_categories($cwwpcpt_limit=5) {    global $wpdb;    $table_name = $wpdb->prefix . "favourite_posts";    $user = wp_get_current_user();    $user_id = $user->ID;    $cwwpcpt_results = $wpdb->get_results("SELECT *, COUNT(*) AS count FROM $table_name WHERE user_id=$user_id GROUP BY wishlist_name ORDER BY count DESC LIMIT $cwwpcpt_limit;");    if ($cwwpcpt_results) {        echo "<ul>";        foreach ($cwwpcpt_results as $cwwpcpt_result):            echo "<li>";            echo "<a href='#' title='". $cwwpcpt_result->wishlist_name ."'>" . $cwwpcpt_result->wishlist_name . "</a> ($cwwpcpt_result->count)";            echo "</li>";        endforeach;        echo "</ul>";    }}include("cwwpcpt-widgets.php");